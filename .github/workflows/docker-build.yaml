name: Build Pipeline Without Docker Daemon

on:
  push:
    branches:
      - dev
      - docker-arm-update
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["audit-service"]
    outputs:
      docker_image: ${{ steps.set_outputs.outputs.docker_image }}
      db_image: ${{ steps.set_outputs.outputs.db_image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU emulation
        uses: docker/setup-qemu-action@v3

      - name: Install BuildKit binaries
        run: |
          wget https://github.com/moby/buildkit/releases/download/v0.11.3/buildkit-v0.11.3.linux-amd64.tar.gz
          tar -xzvf buildkit-v0.11.3.linux-amd64.tar.gz
          chmod +x bin/buildkitd bin/buildctl
          mv bin/buildkitd bin/buildctl ./

      - name: Start BuildKit daemon with OCI worker
        run: |
          sudo nohup ./buildkitd --addr tcp://127.0.0.1:1234 --oci-worker=true > buildkitd.log 2>&1 &
          for i in {1..20}; do
            if nc -z 127.0.0.1 1234; then
              echo "BuildKit is up"
              exit 0
            fi
            echo "Waiting for BuildKit... attempt $i"
            sleep 5
          done
          echo "BuildKit did not start in time. Log output:"
          cat buildkitd.log
          exit 1
      - name: Verify Docker Hub Authentication
        run: |
            AUTH_CHECK=$(curl -s \
              -H "Content-Type: application/json" \
              -X POST \
              -d '{"username": "'"${DOCKER_USERNAME}"'", "password": "'"${DOCKER_PASSWORD}"'"}' \
              https://hub.docker.com/v2/users/login/)
            echo "Docker Hub Response: $AUTH_CHECK"
            TOKEN=$(echo $AUTH_CHECK | jq -r '.token')
            if [ "$TOKEN" = "null" ] || [ -z "$TOKEN" ]; then
              echo "Authentication failed!"
              exit 1
            else
              echo "Authentication successful!"
            fi
        
      - name: Configure Docker credentials for BuildKit
        run: |
              mkdir -p ~/.docker
              AUTH=$(echo -n "${DOCKER_USERNAME}:${DOCKER_PASSWORD}" | base64 | tr -d '\n')
              cat <<EOF > ~/.docker/config.json
              {
                "auths": {
                  "https://index.docker.io/v1/": {
                    "auth": "$AUTH"
                  }
                }
              }
              EOF
          

      - name: Generate Tag
        id: tag
        run: |
          BRANCH=${{ github.ref_name }}
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "tag=${BRANCH}-${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Verify Buildctl installation
        run: ./buildctl --version

      - name: Build and Push Audit Service Docker image
        env:
          BUILDKIT_HOST: tcp://127.0.0.1:1234
        run: |
          ./buildctl build \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=build/maven \
            --output type=image,name=${DOCKER_USERNAME}/audit-service:${{ github.sha }},push=true \
            --opt platform=linux/arm64 \
            --opt build-arg:WORK_DIR=core-services/audit-service

      - name: Build and Push Audit Service DB Docker image
        env:
          BUILDKIT_HOST: tcp://127.0.0.1:1234
        run: |
          ./buildctl build \
            --frontend dockerfile.v0 \
            --local context=core-services/audit-service/src/main/resources/db \
            --local dockerfile=core-services/audit-service/src/main/resources/db \
            --output type=image,name=${DOCKER_USERNAME}/audit-service-db:${{ github.sha }},push=true \
            --opt platform=linux/arm64 \
            --opt build-arg:WORK_DIR=core-services/audit-service-db

      - name: Set Outputs
        id: set_outputs
        run: |
          echo "docker_image=${DOCKER_USERNAME}/audit-service:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "db_image=${DOCKER_USERNAME}/audit-service-db:${{ github.sha }}" >> $GITHUB_OUTPUT
