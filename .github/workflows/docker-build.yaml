name: Build Pipeline Without Docker Daemon

on:
  push:
    branches:
      - dev
      - docker-arm-update
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: arc-runner-set
    strategy:
      matrix:
        service: [ "audit-service" ]
    outputs:
      docker_image: ${{ steps.set_outputs.outputs.docker_image }}
      db_image: ${{ steps.set_outputs.outputs.db_image }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install BuildKit binaries
        run: |
          # Download a specific BuildKit release (adjust version as needed)
          wget https://github.com/moby/buildkit/releases/download/v0.11.3/buildkit-v0.11.3.linux-amd64.tar.gz
          tar -xzvf buildkit-v0.11.3.linux-amd64.tar.gz
          chmod +x bin/buildkitd bin/buildctl
          # Move binaries to current directory for easier use
          mv bin/buildkitd .
          mv bin/buildctl .

      - name: Start BuildKit daemon
        run: |
          # Start buildkitd in the background, listening on TCP port 1234
          nohup ./buildkitd --addr tcp://0.0.0.0:1234 > buildkitd.log 2>&1 &
          # Wait for BuildKit to be available
          for i in {1..10}; do
            if nc -z localhost 1234; then
              echo "BuildKit is up"
              exit 0
            fi
            echo "Waiting for BuildKit..."
            sleep 3
          done
          echo "BuildKit did not start in time" >&2
          exit 1

      - name: Buildctl Login to Docker Hub
        run: |
          ./buildctl login docker.io \
            --username "${{ vars.DOCKER_USERNAME }}" \
            --password "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
            --addr tcp://localhost:1234

      - name: Generate the Next Tag
        id: tag
        run: |
          echo "Generating tag for service: ${{ matrix.service }}"
          BRANCH=${{ github.ref_name }}
          COMMIT_HASH=$(git rev-parse --short HEAD)
          SERVICE_NAME=${{ matrix.service }}
          # A simplified tag scheme; you can add extra logic as needed.
          NEXT_TAG="${BRANCH}-${COMMIT_HASH}"
          echo "::set-output name=tag::$NEXT_TAG"
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
          echo "Generated Tag: $NEXT_TAG"

      - name: Verify Buildctl installation
        run: ./buildctl --version

      - name: Build and Push audit-service Docker image with buildctl
        run: |
          ./buildctl build \
            --addr tcp://localhost:1234 \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=build/maven \
            --output type=registry,name=${{ vars.DOCKER_USERNAME }}/audit-service:${{ github.sha }},push=true \
            --opt platform=linux/arm64 \
            --opt build-arg:WORK_DIR=core-services/audit-service

      - name: Build and Push audit-service db Docker image with buildctl
        run: |
          ./buildctl build \
            --addr tcp://localhost:1234 \
            --frontend dockerfile.v0 \
            --local context=core-services/audit-service/src/main/resources/db \
            --local dockerfile=core-services/audit-service/src/main/resources/db \
            --output type=registry,name=${{ vars.DOCKER_USERNAME }}/audit-service-db:${{ github.sha }},push=true \
            --opt platform=linux/arm64 \
            --opt build-arg:WORK_DIR=core-services/audit-service-db

      - name: Set Outputs
        id: set_outputs
        run: |
          echo "docker_image=${{ vars.DOCKER_USERNAME }}/audit-service:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "db_image=${{ vars.DOCKER_USERNAME }}/audit-service-db:${{ github.sha }}" >> $GITHUB_OUTPUT
